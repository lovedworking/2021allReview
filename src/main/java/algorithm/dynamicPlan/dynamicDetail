1  动态规划问题的一般形式就是求最大值
    动态规划其实是运筹学的一种最优化方法
        比如最长递增子序列  最小编程距离
    &&求解动态规划的核心问题是穷举。
            存在①【重叠子问题】暴力穷举的话效率极其低下，需要备忘录或者DP table 来优化穷举过程，避免不必要的计算。
                斐波那契数列问题
            穷举所有可行解不是容易的事，列出正确的②【状态转移方程】--> 比较困难
                                                 凑零钱问题
            思路
                明确[状态]->定义dp数组/函数的定义->明确[选择]->明确base case
                 为啥叫[状态转移方程]
                                    1    n=1,2
                            f(n)
                                    f(n-1)+f(n-2)   n>2
    &&动态规划问题一定会具有③【最优子结构】
             最优子结构  子问题间必须相互独立
             如何列出正确方程





















